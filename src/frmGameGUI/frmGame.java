/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frmGameGUI;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author simba
 */
public class frmGame extends javax.swing.JFrame {

    private JugadorManager manager = new JugadorManager(); // Controller Object to add, delete, edit, save

    /**
     * Creates new form frmGame
     */
    public frmGame() {
        initComponents();
        manager.loadJugadoresFromFile("jugador.txt"); // Load all saved files when app starts
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblID = new javax.swing.JLabel();
        lblJugador = new javax.swing.JLabel();
        lblNivel = new javax.swing.JLabel();
        lblJuegoFavorito = new javax.swing.JLabel();
        lblScore = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtJugador = new javax.swing.JTextField();
        txtNivel = new javax.swing.JTextField();
        txtJuegoFavorito = new javax.swing.JTextField();
        txtScore = new javax.swing.JTextField();
        btnID = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtareaListado = new javax.swing.JTextArea();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblID.setText("ID:");

        lblJugador.setText("Nombre del Jugador:");

        lblNivel.setText("Nivel:");

        lblJuegoFavorito.setText("Juego Favorito:");

        lblScore.setText("Score:");

        txtID.setToolTipText("Ingrese su ID");
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        txtJugador.setToolTipText("Ingrese su Nombre del frmGameGUI.Jugador");
        txtJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtNivel.setToolTipText("Ingrese su Nivel");
        txtNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNivelActionPerformed(evt);
            }
        });

        txtJuegoFavorito.setToolTipText("Ingrese su Juego Favorito");
        txtJuegoFavorito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJuegoActionPerformed(evt);
            }
        });

        txtScore.setToolTipText("Ingrese Score");
        txtScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtScoreActionPerformed(evt);
            }
        });

        btnID.setText("üîç Buscar");
        btnID.setToolTipText("Buscar Jugador");
        // Action Listener Hookup
        btnID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIDActionPerformed(evt);
            }
        });

        btnEditar.setText("üìù Editar");
        btnEditar.setToolTipText("Editar frmGameGUI.Jugador");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        txtareaListado.setColumns(20);
        txtareaListado.setRows(5);
        jScrollPane1.setViewportView(txtareaListado);

        btnGuardar.setText("üíæ Guardar");
        btnGuardar.setToolTipText("Guardar frmGameGUI.Jugador");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("üöÆ Eliminar");
        btnEliminar.setToolTipText("Eliminar frmGameGUI.Jugador");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblJugador)
                            .addComponent(lblNivel)
                            .addComponent(lblJuegoFavorito)
                            .addComponent(lblScore)
                            .addComponent(lblID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtJuegoFavorito, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                                        .addComponent(btnID))
                                    .addComponent(txtJugador, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(23, 23, 23)
                                .addComponent(btnEditar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtScore, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(btnGuardar)
                .addGap(82, 82, 82)
                .addComponent(btnEliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnID)
                            .addComponent(btnEditar))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblJugador)
                            .addComponent(txtJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblNivel))
                    .addComponent(txtNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblJuegoFavorito)
                    .addComponent(txtJuegoFavorito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblScore)
                    .addComponent(txtScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void txtNivelActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void txtJuegoActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void txtScoreActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    // Save Button
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        try {
            int id = manager.generateNewId(); // Automatically assign ID
            String jugador = txtJugador.getText();
            int nivel = Integer.parseInt(txtNivel.getText());
            String juegoFavorito = txtJuegoFavorito.getText();
            int score = Integer.parseInt(txtScore.getText());

            // Validate fields are not empty
            if (jugador.isEmpty() || juegoFavorito.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor complete todos los campos.");
                return;
            }

            // Create and add the new player
            Jugador newJugador = new Jugador(id, jugador, nivel, juegoFavorito, score);

            if (manager.addJugador(newJugador)) {
                manager.saveJugadoresToFile("jugador.txt"); // Save after adding
                JOptionPane.showMessageDialog(this, "Jugador agregado exitosamente!");
                takeScreenshot();
                clearForm();
                txtID.setText(String.valueOf(id)); // Show assigned ID
            } else {
                JOptionPane.showMessageDialog(this, "Un jugador con este id existe");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Nivel y Score son no es valido");
        }
    }

    // Clear Text Area
    private void clearForm() {
        txtID.setText("");
        txtJugador.setText("");
        txtNivel.setText("");
        txtJuegoFavorito.setText("");
        txtScore.setText("");
    }

    // Take Screenshots
    public void takeScreenshot() {
        try {
            Point location = this.getLocationOnScreen(); // Get top-left of the window
            Dimension size = this.getSize();
            Rectangle screenRect = new Rectangle(location, size);

            Robot robot = new Robot();
            BufferedImage screenshot = robot.createScreenCapture(screenRect);
            ImageIO.write(screenshot, "png", new File("screenshot.png"));
            System.out.println("Captura guardada exitosamente.");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    // Logic used to show players by id in the textarea
    private void btnIDActionPerformed(java.awt.event.ActionEvent evt) {
        String idText = txtID.getText().trim();

        if (idText.isEmpty()) {
            // No ID: List all players
            StringBuilder listJugadors = new StringBuilder();

            for (Jugador jugador : manager.getJugadorList()) {
                listJugadors.append("ID: ").append(jugador.getId()).append("\n")
                        .append("Jugador: ").append(jugador.getJugador()).append("\n")
                        .append("Nivel: ").append(jugador.getNivel()).append("\n")
                        .append("Juego Favorito: ").append(jugador.getJuegoFavorito()).append("\n")
                        .append("Score: ").append(jugador.getScore()).append("\n")
                        .append("-------------------------\n");
            }

            if (listJugadors.length() == 0) {
                txtareaListado.setText("No hay jugadores registrados");
            } else {
                txtareaListado.setText(listJugadors.toString());
            }
        } else {
            // ID entered: search specific player
            try {
                int id = Integer.parseInt(idText);
                Jugador jugador = manager.getJugadorById(id);

                if (jugador != null) {
                    txtareaListado.setText("ID: " + jugador.getId() + "\n:"
                            + "Jugador: " + jugador.getJugador() + "\n"
                            + "Nivel: " + jugador.getNivel() + "\n"
                            + "Juego Favorito: " + jugador.getJuegoFavorito() + "\n"
                            + "Score: " + jugador.getScore());
                } else {
                    txtareaListado.setText("No se encontro ningun jugador con ese ID.");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "El id del jugador es incorrecto");
            }
        }
    }

    // Delete Button
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String idText = txtID.getText().trim();

            if (idText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor ingrese un ID para eliminar.");
                return;
            }

            int id = Integer.parseInt(idText);

            // Ask for confirmation before deleting
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Est√°s seguro de que deseas eliminar el Jugador con ID " + id + "?",
                    "Confirm de Eliminar",
                    JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                return; // Delete cancelled by user
            }

            boolean eliminado = manager.removeJugador(id);

            if (eliminado) {
                manager.saveJugadoresToFile("jugador.txt"); // Save changes
                JOptionPane.showMessageDialog(this, "Jugador eliminado exitosamente!");
                clearForm();
                txtareaListado.setText(""); // clear the lost display
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro ningun jugador con ese ID.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El id del jugador es incorrecto");
        }
    }

    // Edit Button
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            int id = Integer.parseInt(txtID.getText().trim());
            String jugador = txtJugador.getText().trim();
            int nivel = Integer.parseInt(txtNivel.getText().trim());
            String juegoFavorito = txtJuegoFavorito.getText().trim();
            int score = Integer.parseInt(txtScore.getText().trim());

            // Validate empty fields
            if (jugador.isEmpty() || juegoFavorito.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor complete todos los campos");
                return;
            }

            Jugador jugadorEdited = new Jugador(id, jugador, nivel, juegoFavorito, score);

            if (manager.editJugador(jugadorEdited)) {
                manager.saveJugadoresToFile("jugador.txt"); // Save Changes
                JOptionPane.showMessageDialog(this, "Jugador editado exitosamente!");
                clearForm();
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro ningun jugador con ese ID.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese valores v√°lidos (ID, nivel, score)");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnID;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblJuegoFavorito;
    private javax.swing.JLabel lblNivel;
    private javax.swing.JLabel lblJugador;
    private javax.swing.JLabel lblScore;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtJuegoFavorito;
    private javax.swing.JTextField txtNivel;
    private javax.swing.JTextField txtJugador;
    private javax.swing.JTextField txtScore;
    private javax.swing.JTextArea txtareaListado;
    // End of variables declaration                   
}
